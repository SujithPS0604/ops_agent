version: '3.8'

services:
  localstack:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs,opensearch,dynamodb
      - DEBUG=1
      - AWS_DEFAULT_REGION=us-east-1
      - PERSISTENCE=1
      - HOSTNAME_EXTERNAL=localstack
      - DISABLE_CORS_CHECKS=1
      - USE_SSL=0
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./init-resources:/docker-entrypoint-initaws.d"
    networks:
      - ops-network
    command: >
      sh -c "apt-get update && apt-get install -y jq && 
      /usr/local/bin/docker-entrypoint.sh"

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    ports:
      - "9200:9200"
      - "9600:9600" 
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - DISABLE_SECURITY_PLUGIN=true 
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    networks:
      - ops-network

  mcp-server-sse:
    build:
      context: ./ops-agent-backend
      dockerfile: Dockerfile.mcp-server-sse
    ports:
      - "3001:3001"
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ACCOUNT_ID=000000000000
      - ENVIRONMENT=nonlive
      - OPENSEARCH_HOST=http://opensearch:9200
      - OPENSEARCH_INDEX_ID=cwl-logs
      - OPENSEARCH_DEFAULT_VIEW_ID=default
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=qwen3:8b
      - FRONTEND_URL=http://host.docker.internal:3000
    depends_on:
      - localstack
      - opensearch
    volumes:
      - ./ops-agent-backend/.env:/app/.env
      - ./ops-agent-backend/dlqs.json:/app/dlqs.json
    networks:
      - ops-network

  mcp-api-server:
    build:
      context: ./ops-agent-backend
      dockerfile: Dockerfile.mcp-api-server
    ports:
      - "3002:3002"
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ACCOUNT_ID=000000000000
      - ENVIRONMENT=nonlive
      - OPENSEARCH_HOST=http://opensearch:9200
      - OPENSEARCH_INDEX_ID=cwl-logs
      - OPENSEARCH_DEFAULT_VIEW_ID=default
      - FRONTEND_URL=http://localhost:3000
      - MCP_AGENT_URL=http://mcp-server-sse:3001/sse
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
      - OLLAMA_MODEL=qwen3:8b
    depends_on:
      - localstack
      - opensearch
      - mcp-server-sse
    volumes:
      - ./ops-agent-backend/.env:/app/.env
      - ./ops-agent-backend/dlqs.json:/app/dlqs.json
    networks:
      - ops-network

  ops-ui:
    build:
      context: ./ops-ui
      args:
        - REACT_APP_API_BASE_URL=http://localhost/backend
        - REACT_APP_MCP_AGENT_URL=http://localhost:3001/sse
    ports:
      - "3000:80"
    depends_on:
      - mcp-api-server
      - mcp-server-sse
    networks:
      - ops-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - ops-ui
      - mcp-api-server
    networks:
      - ops-network

  migration:
    image: alpine:latest
    volumes:
      - ./init-resources:/init-resources
      - ./ops-agent-backend/dlqs.json:/init-resources/dlqs.json
    depends_on:
      - localstack
      - opensearch
      - mcp-server-sse
      - mcp-api-server
    entrypoint: >
      sh -c "
        echo 'Waiting for services to be fully up...' &&
        sleep 15 &&
        echo 'Running initialization scripts...' &&
        apk add --no-cache bash curl jq aws-cli &&
        chmod +x /init-resources/01-init-queues.sh &&
        chmod +x /init-resources/02-init-opensearch.sh &&
        chmod +x /init-resources/03-init-orders.sh &&
        bash /init-resources/01-init-queues.sh &&
        bash /init-resources/02-init-opensearch.sh &&
        bash /init-resources/03-init-orders.sh &&
        echo 'Initialization completed successfully!'
      "
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    networks:
      - ops-network

volumes:
  opensearch-data:

networks:
  ops-network:
    driver: bridge 